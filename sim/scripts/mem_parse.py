# Copyright 2025 LIRMM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import pandas as pd
import argparse
import matplotlib.pyplot as plt

def count_operations(csv_file, start_time, end_time):
    df = pd.read_csv(csv_file, sep=';')
    filtered_df = df[(df['time(ns)'] >= start_time) & (df['time(ns)'] <= end_time)]
    write_count = filtered_df[filtered_df['Operation'] == 'write'].shape[0]
    read_count = filtered_df[filtered_df['Operation'] == 'read'].shape[0]
    write_bytes = [0, 0, 0, 0]
    for i in range(4):
        write_bytes[i] = filtered_df[filtered_df['Operation'] == 'write'][filtered_df['#bytes'] == i+1].shape[0]
    return write_count, read_count, write_bytes

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description =
        'This script parses the csv files generated by the testbench for memory accesses')
    parser.add_argument('csv_file', type=str,
        help='CSV file containing memory accesses.')
    parser.add_argument('start_time', type=int,
        help='Start time in ps for the memory accesses.')
    parser.add_argument('end_time', type=int,
        help='End time in ps for the memory accesses.')
    args = parser.parse_args()
    csv_path = args.csv_file
    start_time = args.start_time
    end_time = args.end_time
    write_count, read_count, write_bytes = count_operations(csv_path, start_time, end_time)
    print('Write count:', write_count)
    print('Read count:', read_count)
    for i in range(4):
        print('Write count for', i+1, 'bytes:', write_bytes[i])