# =============================================================================
# Auto-generated by power_flow.py 
# =============================================================================
# This script is used to perform power analysis on the synthesized design.
# Execute by running the following command: pwr_shell -f power.tcl
# To clean the folder : export CLEAN=1; pwr_shell -f power.tcl; unset CLEAN

set synth   ../src
set simul   ../../sim/scripts

# Define directories
set dirs        [list "../outputs"]

# # Check if "clean" is in the command-line arguments
# if {[info exists env(CLEAN)] >= 0} {
#     # Iterate over directories
#     foreach dir $dirs {
#         if {[file exists $dir]} {
#             file delete -force -- $dir
#             puts "Directory $dir deleted."
#         }
#     }
#     foreach log_file [glob -nocomplain *.log *.svf] {
#             file delete -force -- $log_file
#             puts "File $log_file deleted."
#         }
#     # Exit the script after cleaning
#     exit
# }
# Iterate over directories
foreach dir $dirs {
    if {[file exists $dir]} {
        file delete -force -- $dir
        file mkdir $dir
    } else {
        file mkdir $dir
    }
}

# Technology Setup
# =============================================================================
set CMOS28FDSOI_DIR $env(CMOS28FDSOI_DIR)
set SYN_PATH $env(SNPS_SYN_PATH)
set search_path	". $SYN_PATH/libraries/syn $SYN_PATH/dw/sim_ver \\
  $CMOS28FDSOI_DIR/C28SOI_SC_12_CORE_LR/5.1-03/libs "
set target_library "C28SOI_SC_12_CORE_LR_tt28_0.90V_25C.db"
set link_library "* $target_library "
# set symbol_library "C28SOI_SC_12_CORE_LL.sdb"
# set synthetic_library dw_foundation.sldb 

# Power Analysis Setup
# =============================================================================
set power_enable_timing_analysis true
set power_analysis_mode time_based

# Load Design and Link
# =============================================================================
read_verilog $synth/adam_synth.v
current_design adam_unwrap
link
# start_gui

# Timing
# =============================================================================
# check_timing
# update_timing
# report_timing

# Perform Power Estimation
# =============================================================================
read_vcd "/scratch/k-romdhane/vcd_files/adam_conv.vcd" -strip_path ps_adam_tb/dut/adam_unwrap -pipe_exec "make -f ../../sim/scripts/adam_ps.makefile"

# Time based analysis with an intervalle of 20ns and the outfile will be adam.out
set_power_analysis_options \
    -waveform_format out \
    -waveform_output /scratch/k-romdhane/waveforms/dnn \
    -waveform_interval 1 \
    -separate_dyn_and_leak_power_waveform 

check_power
update_power
report_power -verbose > /scratch/k-romdhane/reports/conv_power_report.txt
report_power -hierarchy > /scratch/k-romdhane/reports/conv_power_report_hier.txt
# report_units > ../outputs/adam_power_units.txt
# Exit
# =============================================================================
exit

# gui_start
