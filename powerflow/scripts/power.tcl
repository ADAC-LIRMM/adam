# =============================================================================
# Auto-generated by power_flow.py 
# =============================================================================
# This script is used to perform power analysis on the synthesized design.
# Execute by running the following command: pwr_shell -f power.tcl
set synth   ../src
set simul   ../../sim/scripts

# Technology Setup
# =============================================================================
set CMOS28FDSOI_DIR $env(CMOS28FDSOI_DIR)
set SYN_PATH $env(SNPS_SYN_PATH)
set search_path	". $SYN_PATH/libraries/syn $SYN_PATH/dw/sim_ver \\
  $CMOS28FDSOI_DIR/C28SOI_SC_12_CORE_LL/5.1-05/libs "
set target_library "C28SOI_SC_12_CORE_LL_tt28_0.90V_0.00V_0.00V_0.00V_125C.db"
set link_library "* $target_library "
# set symbol_library "C28SOI_SC_12_CORE_LL.sdb"
# set synthetic_library dw_foundation.sldb 

# Power Analysis Setup
# =============================================================================
set power_enable_timing_analysis true
set power_analysis_mode time_based

# Load Design and Link
# =============================================================================
read_verilog $synth/adam_synth.v
current_design adam_unwrap
link
start_gui

# Timing
# =============================================================================
# check_timing
# update_timing
# report_timing

# Perform Power Estimation
# =============================================================================
read_vcd "$simul/adam_ps.vcd" -strip_path ps_adam_tb/dut/adam_unwrap

set_power_analysis_options \
    -waveform_format out \
    -waveform_output waveform \
    -separate_dyn_and_leak_power_waveform \
    -waveform_interval 100 \\

check_power
update_power
report_power

# Exit
# =============================================================================
exit

# gui_start
